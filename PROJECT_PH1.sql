--3,5
--T?O M?I USER
CREATE OR REPLACE PROCEDURE GRANT_NEWUSER
(USER_NAME IN NVARCHAR2,PASS_WORD IN NVARCHAR2)
AUTHID CURRENT_USER 
AS
    TMP_COUNT INT;
BEGIN
    SELECT COUNT(*) INTO TMP_COUNT FROM ALL_USERS  WHERE UPPER(USERNAME) = UPPER(USER_NAME);
    IF(TMP_COUNT != 0) THEN
        RAISE_APPLICATION_ERROR(-20000,'USER DA TON TAI'); 
    ELSE 
        EXECUTE IMMEDIATE('CREATE USER '|| USER_NAME||' IDENTIFIED BY '||PASS_WORD);
        EXECUTE IMMEDIATE('GRANT CREATE SESSION TO '||USER_NAME);
    END IF;
END;
/
--XÓA USER
CREATE OR REPLACE PROCEDURE DROP_USER
(USER_NAME IN VARCHAR2)
AUTHID CURRENT_USER 
AS
    TMP_COUNT INT;
BEGIN
    SELECT COUNT(*) INTO TMP_COUNT FROM ALL_USERS WHERE UPPER(USERNAME) = UPPER(USER_NAME);
    IF(TMP_COUNT != 0) THEN
        EXECUTE IMMEDIATE('DROP USER '|| USER_NAME);
    ELSE 
         RAISE_APPLICATION_ERROR(-20000,'USER KHONG TON TAI'); 
    END IF;
END;
/
--T?O ROLE
CREATE OR REPLACE PROCEDURE GRANT_NEWROLE(ROLE_NAME IN VARCHAR2,PASS_WORD IN VARCHAR2)
AUTHID CURRENT_USER 
AS
    TMP_QUERY VARCHAR(100);
BEGIN
    IF(PASS_WORD = ' ') THEN
    TMP_QUERY := 'CREATE ROLE '|| ROLE_NAME;
    END IF;
    TMP_QUERY := 'CREATE ROLE '|| ROLE_NAME||' IDENTIFIED BY '||PASS_WORD;
    EXECUTE IMMEDIATE (TMP_QUERY);
    EXCEPTION
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20000,'ROLE DA TON TAI'); 

END;
/
--XÓA ROLE
CREATE OR REPLACE PROCEDURE DROP_ROLE(ROLE_NAME IN VARCHAR2)
AUTHID CURRENT_USER 
AS
    TMP_QUERY VARCHAR(100);
BEGIN
    TMP_QUERY := 'DROP ROLE '|| ROLE_NAME;
    EXECUTE IMMEDIATE (TMP_QUERY);
    EXCEPTION
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20000,'ROLE KHONG TON TAI'); 

END;
/
--CH?NH S?A PASSWORD USER
CREATE OR REPLACE PROCEDURE ALTER_USER(USER_NAME IN VARCHAR2,PASS_WORD IN VARCHAR2)
AUTHID CURRENT_USER
IS
TMP_COUNT INT;
BEGIN
    SELECT COUNT(*) INTO TMP_COUNT FROM ALL_USERS WHERE UPPER(USERNAME) = UPPER(USER_NAME);
    IF(TMP_COUNT != 0) THEN
        EXECUTE IMMEDIATE('ALTER USER '|| USER_NAME||' IDENTIFIED BY '||PASS_WORD);
    ELSE 
            RAISE_APPLICATION_ERROR(-20000,'USER KHONG TON TAI'); 
    END IF;
END;
/
--CH?NH S?A ROLE
CREATE OR REPLACE PROCEDURE ALTER_ROLE(ROLE_NAME IN VARCHAR2,PASS_WORD IN VARCHAR2)
AUTHID CURRENT_USER
IS
    TMP_COUNT INT;
    TMP_QUERY VARCHAR2(100);
BEGIN
    IF(PASS_WORD='') THEN
    TMP_QUERY :='ALTER ROLE '|| ROLE_NAME|| ' NOT IDENTIFIED';
    EXECUTE IMMEDIATE(TMP_QUERY);
    ELSIF(PASS_WORD!=' ') THEN
    TMP_QUERY :='ALTER ROLE '|| ROLE_NAME|| ' IDENTIFIED BY'|| PASS_WORD;
    END IF;
END;

grant drop user to temppP;
GRANT SELECT ON DEAN TO TEMPPP;

/
--PHÂN QUY?N CHO ROLE 
CREATE OR REPLACE PROCEDURE GRANT_PRIVS_TOROLE(ROLE_NAME IN VARCHAR2, PRIVS_NAME IN VARCHAR2,TABLE_NAME IN VARCHAR2)
AUTHID CURRENT_USER 
IS
TMP_QUERY VARCHAR2(100);
BEGIN 
    TMP_QUERY := 'GRANT '||PRIVS_NAME|| ' ON ' ||TABLE_NAME ||' TO ' ||ROLE_NAME;
    EXECUTE IMMEDIATE (TMP_QUERY); 
END;

/


--THU H?I QUY?N C?A ROLE
CREATE OR REPLACE PROCEDURE REVOKE_PRIVS_TOROLE(ROLE_NAME IN VARCHAR2, PRIVS_NAME IN VARCHAR2,TABLE_NAME IN VARCHAR2)
AUTHID CURRENT_USER 
IS
TMP_QUERY VARCHAR2(100);
BEGIN 
    TMP_QUERY := 'REVOKE '||PRIVS_NAME|| ' ON ' ||TABLE_NAME ||' FROM ' ||ROLE_NAME;
    EXECUTE IMMEDIATE (TMP_QUERY); 
END;
/
--C?P QUY?N CHO USER
CREATE OR REPLACE PROCEDURE GRANT_PRIVS_TOUSER(USER_NAME IN VARCHAR2, PRIVS_NAME IN VARCHAR2,TABLE_NAME IN VARCHAR2,GRANT_OPTION IN VARCHAR2 )
AUTHID CURRENT_USER 
IS
TMP_COUNT INT;
TMP_QUERY VARCHAR2(100);
BEGIN 
SELECT COUNT(*) INTO TMP_COUNT FROM ALL_USERS WHERE UPPER(USERNAME) = UPPER(USER_NAME);
IF(TMP_COUNT!=0) THEN
    IF(GRANT_OPTION='NO') THEN
    TMP_QUERY:='GRANT '||PRIVS_NAME|| ' ON ' ||TABLE_NAME ||' TO ' ||USER_NAME;
    EXECUTE IMMEDIATE (TMP_QUERY);
   
    ELSIF(GRANT_OPTION='YES') THEN
    TMP_QUERY:='GRANT '||PRIVS_NAME|| ' ON ' ||TABLE_NAME ||' TO ' ||USER_NAME||' WITH GRANT OPTION' ;
    END IF;
EXECUTE IMMEDIATE (TMP_QUERY);
ELSE 
RAISE_APPLICATION_ERROR(-20000,'USER CHUA TON TAI');
END IF;
END;
/
--THU H?I QUY?N CHO USER
CREATE OR REPLACE PROCEDURE REVOKE_OBJECT_PRIVS_USER(USER_NAME IN VARCHAR2, PRIV IN VARCHAR2, A_OBJECT IN VARCHAR2)
AUTHID CURRENT_USER IS
TMP_QUERY VARCHAR(100);
TMP_COUNT INT;
EXCEPTION_USERNAME EXCEPTION;
BEGIN

SELECT COUNT(*) INTO TMP_COUNT FROM ALL_USERS WHERE  UPPER(USERNAME) = UPPER(USER_NAME);
IF(TMP_COUNT != 0) THEN
TMP_QUERY:='REVOKE '||PRIV||' ON ' ||A_OBJECT||' FROM ' ||USER_NAME;
EXECUTE IMMEDIATE (TMP_QUERY);
ELSIF(TMP_COUNT=0) THEN
RAISE EXCEPTION_USERNAME;
END IF;

EXCEPTION 
WHEN EXCEPTION_USERNAME THEN 
RAISE_APPLICATION_ERROR(-20000,'USER CHUA TON TAI');
WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
